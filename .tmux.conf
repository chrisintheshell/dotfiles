# Set prefix to space.
unbind C-b
set -g prefix C-Space

# General options
set -g history-limit 100000
set -g base-index 1
set -g pane-base-index 1
set-option -g focus-events on

# 256 color support
set -g default-terminal "tmux-256color"

# Add Truecolor support
set -ga terminal-overrides ",tmux-256color:RGB"
#set -ga terminal-overrides ",*256col*:Tc"

## Allows for faster key repetition
set -sg escape-time 0

# Enable mouse scrolling
set -g mouse on
bind -T copy-mode-vi C-y send -X scroll-up
bind -T copy-mode-vi WheelUpPane send -N1 -X scroll-up
bind -T copy-mode-vi C-e send -X scroll-down
bind -T copy-mode-vi WheelDownPane send -N1 -X scroll-down

# Stay in copy mode on drag end.
# (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# stop-selection` but it is a bit glitchy.)
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Copy to pasteboard using iTerm2 with setting "Applications in terminal may access clipboard"
#bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel pbcopy

# Copy to pasteboard using using reattach-to-user-namespace
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi 'V' send -X rectangle-toggle

# Copy to pasteboard using clipper on remote OpenBSD host (-N is required to shutdown(2) the network socket after EOF on the input)
#bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "nc -U -N ~/.clipper.sock"

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
#bind-key -T root DoubleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -t{mouse} -X select-word"
#bind-key -T root TripleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -t{mouse} -X select-line"

# Swap window with the next one
bind -n M-S-Right swap-window -t +1
bind . swap-window -t +1

# Swap window with the previous one
bind -n M-S-Left swap-window -t -1
bind , swap-window -t -1

# Switch to custom session-switch table for local/remote session switching
bind-key x switch-client -T session-switch

# Keybinding to switch to the remote session
bind-key -T session-switch r switch-client -t remote

# Keybinding to switch back to the local session
bind-key -T session-switch l switch-client -t local

# Toggle the status bar only for the “remote” session without affecting the “local” session
bind-key -T prefix o if-shell '[ "$(tmux display-message -p "#S")" = "remote" ]' \
  'set-option -g status' \
  'set-option -g status off'

# Fast toggle between current and last-used window (normally prefix-l).
bind ^space last-window

# Dynamically update terminal tab and window titles.
set -g set-titles on

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Set the non-word characters for word boundaries (default is ‘ -_@’)
#set-option -ga word-separators "|{}()[]<>`='\"!@#$%^&*:;,?"
set -g word-separators " /\\()\"'`,;<>@{}[]|."

# Split windows like Vim
# Vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# Vim navigation key bidings
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes like vim
# - change the adjustment number to the number of lines/cells you want to resize to
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# Toggle key tables on local machines to allow keybindings to pass to remote session
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set @off_mode " Keybinds:OFF " \;\
    refresh-client -S

bind -T off F12 \
    set -u prefix \;\
    set -u key-table \;\
    set @off_mode "" \;\
    refresh-client -S

# vi-style controls for copy mode
setw -g mode-keys vi

if-shell "test -f ~/.tmux-style-material-local" "source ~/.tmux-style-material-local"
